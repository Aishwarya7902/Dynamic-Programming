******************************************this problem is same as count of subset with a given difference
                        BEST EXPLANATION:https://youtu.be/Hw6Ygp3JBYw
                        Time Complexity: O(S*N), where S = sum of array elements + K/2 (here k is the given difference)
                                                          Auxiliary Space: O(S*N)************************************************************


#include<bits/stdc++.h>
#include <iostream>
using namespace std;
int countsubs(vector<int>&arr,int n,int sum){
     int  t[n+1][sum+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<sum+1;j++){
            if(i==0){
                t[i][j]=0;
            }
            if(j==0)t[i][j]=1;
            
        }
    }
for(int  i=1;i<=n;i++){
    for(int j=1;j<=sum;j++){
        if(arr[i-1]<=j){
            t[i][j]=t[i-1][j]+t[i-1][j-arr[i-1]];
        }
        else{
            t[i][j]=t[i-1][j];
        }
    }
}
return t[n][sum];
}
int targetSum(vector<int>&arr,int n,int sum){
    int total=0;
    for(int i=0;i<n;i++){
        total+=arr[i];
    }
    int s1=(total+sum)/2;
    return countsubs(arr,n,s1);
}

int main() {
     
    int sum = 1, n = 4;
    vector<int>arr = { 1, 1, 2, 3};
 
    // Function Call
    cout << targetSum(arr, n, sum);
    
    
	return 0;
}
