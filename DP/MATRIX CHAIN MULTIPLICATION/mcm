problem statement:https://practice.geeksforgeeks.org/problems/matrix-chain-multiplication0303/1#
video explanation:https://youtu.be/kMK148J9qEE
*****************************RECURSIVE********************

class Solution{
public:
int helper(int arr[],int i,int j){
    if(i>=j)return 0;
    int mn=INT_MAX;
    for(int k=i;k<j;k++){
        int temp=helper(arr,i,k)+helper(arr,k+1,j)+arr[i-1]*arr[k]*arr[j];
        if(temp<mn)mn=temp;
    }
    return mn;
}
    int matrixMultiplication(int N, int arr[])
    {
        // code here
        return helper(arr,1,N-1);
    }
};

*********************************************************MEMOIZATION***********************

int static t[101][101];
class Solution{
public:
int helper(int arr[],int i,int j){
    if(i>=j)return 0;
    if(t[i][j]!=-1)return t[i][j];
    int mn=INT_MAX;
    for(int k=i;k<j;k++){
        int temp=helper(arr,i,k)+helper(arr,k+1,j)+arr[i-1]*arr[k]*arr[j];
        if(temp<mn)mn=temp;
    }
    return t[i][j]=mn;
}
    int matrixMultiplication(int N, int arr[])
    {
        // code here
        for(int i=0;i<101;i++){
            for(int j=0;j<101;j++){
                t[i][j]=-1;
            }
        }
        return helper(arr,1,N-1);
    }
};
