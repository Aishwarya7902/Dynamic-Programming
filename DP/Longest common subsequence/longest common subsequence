PROBLEM:https://practice.geeksforgeeks.org/problems/longest-common-subsequence-1587115620/1
////////////////////////////////////////////////////REURSIVE(GETTING TLE)////////////////////////////////////////////


int lcs(int x, int y, string s1, string s2)
    {
        // your code here
        if(x==0 || y==0)return 0;
        if(s1[x-1]==s2[y-1]){
            return 1+lcs(x-1,y-1,s1,s2);
        }
        else{
            return max(lcs(x,y-1,s1,s2),lcs(x-1,y,s1,s2));
        }
    }
    
    ************************************MEMOIZATION(TLE)*************************
    time:O(N^2)
    int lcs(int x, int y, string s1, string s2)
    {
        // your code here
        int t[x+1][y+1];
        for(int i=0;i<x+1;i++){
            for(int j=0;j<y+1;j++){
                t[i][j]=-1;
            }
        }
        if(x==0 || y==0)return 0;
        if(t[x][y]!=-1)return t[x][y];
        if(s1[x-1]==s2[y-1]){
            return  t[x][y]=1+lcs(x-1,y-1,s1,s2);
        }
        else{
            return  t[x][y]=max(lcs(x,y-1,s1,s2),lcs(x-1,y,s1,s2));
        }
    }
    
    *******************************BOTTOM-UP APPROACH_________________(BEST)****************************
     int lcs(int x, int y, string s1, string s2)
    {
        // your code here
        int t[x+1][y+1];
        for(int i=0;i<x+1;i++){
            for(int j=0;j<y+1;j++){
                if(i==0 || j==0)
                t[i][j]=0;
            }
        }
        for(int i=1;i<x+1;i++){
            for(int j=1;j<y+1;j++){
                if(s1[i-1]==s2[j-1]){
                    t[i][j]=1+t[i-1][j-1];
                }
                else{
                    t[i][j]=max(t[i-1][j],t[i][j-1]);
                }
            }
        }
        return t[x][y];
    }
