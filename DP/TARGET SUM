******************************************this problem is same as count of subset with a given difference
                        BEST EXPLANATION:https://youtu.be/Hw6Ygp3JBYw
                        
                        problem:https://practice.geeksforgeeks.org/problems/target-sum-1626326450/1#
                        Time Complexity: O(S*N), where S = sum of array elements + K/2 (here k is the given difference)
                                                          Auxiliary Space: O(S*N)************************************************************


#include<bits/stdc++.h>
class Solution {
public:
    int count(vector<int>& nums, int x,int n){
        
        int  t[n+1][x+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=x;j++){
                if(i==0){
                    t[i][j]=0;
                }
                 if(j==0){
                    t[i][j]=1;
                }
            }
        }
            for(int i=1;i<=n;i++){
            for(int j=0;j<=x;j++){
                if(nums[i-1]<=j){
                    t[i][j]=t[i-1][j-nums[i-1]]+t[i-1][j];
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
            }
        return t[n][x];
        
    }
    int findTargetSumWays(vector<int>& nums, int target) {
     int n=nums.size();
       target = abs(target);
        int range=0;
        for(auto it:nums){
        range+=it;
        }
        int s1=(target+range)/2;
         if(range < target || (range + target) % 2 != 0)
            return 0;
        return count(nums,s1,n);
    }
};


/*some doubt that may arise later 
can you please explain why in second for loop j started from 0 as in the previous for loops we already covered the case of j=0?

ans to this is:If we start the j loop with j=1, then we will ignore the case when there is a zero in the array. For example, to make a subset with sum 0 - either we make
an empty subset(this case can be taken care of by filling the 0th column with 1s) OR we make a subset with 0s present in the array. When we start the loop with j=0, we will 

also be checking for the latter case i.e. Zero is present in the array. 
The code given on GFG does not work for an array containing zeroes. Try dry running with an array that contains 0s with that code. Hope this helps.
*/
